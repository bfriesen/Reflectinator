////////////////////////////////////////////////////////////////////////////////
// This file was generated by a tool. Any manual changes to this file will be //
// lost if/when the file is regenerated. If changes need to be made to this   //
// file, they should be made in Method`n.tt, which regenerates this file.     //
////////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;

namespace Reflectinator
{
    public abstract class Method : IMethod
    {
        private static readonly ConcurrentDictionary<int, IMethod> _methodsMap = new ConcurrentDictionary<int, IMethod>();

        private readonly MethodInfo _methodInfo;
        private readonly Func<object, object[], object> _invoke;

        internal Method(MethodInfo methodInfo)
        {
            _methodInfo = methodInfo;
            _invoke = (instance, args) => methodInfo.Invoke(instance, args); // TODO: get from FuncFactory
        }

        #region Factory Methods

        public static IMethod Get(MethodInfo methodInfo)
        {
            var parameters = methodInfo.GetParameters().Select(p => p.ParameterType).ToArray();

            return _methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(parameters),
                _ =>
                {
                    var methodType = GetConcreteMethodType(methodInfo, parameters);
                    return (IMethod)Activator.CreateInstance(methodType, BindingFlags.NonPublic | BindingFlags.Instance, null, new object[] { methodInfo }, null);
                });
        }

        public static FuncMethod<TDeclaringType, TReturnType> GetFuncMethod<TDeclaringType, TReturnType>(MethodInfo methodInfo)
        {
            return (FuncMethod<TDeclaringType, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(),
                _ => new FuncMethod<TDeclaringType, TReturnType>(methodInfo));
        }

        public static ActionMethod<TDeclaringType> GetActionMethod<TDeclaringType>(MethodInfo methodInfo)
        {
            return (ActionMethod<TDeclaringType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(),
                _ => new ActionMethod<TDeclaringType>(methodInfo));
        }

        public static StaticFuncMethod<TDeclaringType, TReturnType> GetStaticFuncMethod<TDeclaringType, TReturnType>(MethodInfo methodInfo)
        {
            return (StaticFuncMethod<TDeclaringType, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(),
                _ => new StaticFuncMethod<TDeclaringType, TReturnType>(methodInfo));
        }

        public static StaticActionMethod<TDeclaringType> GetStaticActionMethod<TDeclaringType>(MethodInfo methodInfo)
        {
            return (StaticActionMethod<TDeclaringType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(),
                _ => new StaticActionMethod<TDeclaringType>(methodInfo));
        }

        public static FuncMethod<TDeclaringType, TArg1, TReturnType> GetFuncMethod<TDeclaringType, TArg1, TReturnType>(MethodInfo methodInfo)
        {
            return (FuncMethod<TDeclaringType, TArg1, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1)),
                _ => new FuncMethod<TDeclaringType, TArg1, TReturnType>(methodInfo));
        }

        public static ActionMethod<TDeclaringType, TArg1> GetActionMethod<TDeclaringType, TArg1>(MethodInfo methodInfo)
        {
            return (ActionMethod<TDeclaringType, TArg1>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1)),
                _ => new ActionMethod<TDeclaringType, TArg1>(methodInfo));
        }

        public static StaticFuncMethod<TDeclaringType, TArg1, TReturnType> GetStaticFuncMethod<TDeclaringType, TArg1, TReturnType>(MethodInfo methodInfo)
        {
            return (StaticFuncMethod<TDeclaringType, TArg1, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1)),
                _ => new StaticFuncMethod<TDeclaringType, TArg1, TReturnType>(methodInfo));
        }

        public static StaticActionMethod<TDeclaringType, TArg1> GetStaticActionMethod<TDeclaringType, TArg1>(MethodInfo methodInfo)
        {
            return (StaticActionMethod<TDeclaringType, TArg1>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1)),
                _ => new StaticActionMethod<TDeclaringType, TArg1>(methodInfo));
        }

        public static FuncMethod<TDeclaringType, TArg1, TArg2, TReturnType> GetFuncMethod<TDeclaringType, TArg1, TArg2, TReturnType>(MethodInfo methodInfo)
        {
            return (FuncMethod<TDeclaringType, TArg1, TArg2, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2)),
                _ => new FuncMethod<TDeclaringType, TArg1, TArg2, TReturnType>(methodInfo));
        }

        public static ActionMethod<TDeclaringType, TArg1, TArg2> GetActionMethod<TDeclaringType, TArg1, TArg2>(MethodInfo methodInfo)
        {
            return (ActionMethod<TDeclaringType, TArg1, TArg2>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2)),
                _ => new ActionMethod<TDeclaringType, TArg1, TArg2>(methodInfo));
        }

        public static StaticFuncMethod<TDeclaringType, TArg1, TArg2, TReturnType> GetStaticFuncMethod<TDeclaringType, TArg1, TArg2, TReturnType>(MethodInfo methodInfo)
        {
            return (StaticFuncMethod<TDeclaringType, TArg1, TArg2, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2)),
                _ => new StaticFuncMethod<TDeclaringType, TArg1, TArg2, TReturnType>(methodInfo));
        }

        public static StaticActionMethod<TDeclaringType, TArg1, TArg2> GetStaticActionMethod<TDeclaringType, TArg1, TArg2>(MethodInfo methodInfo)
        {
            return (StaticActionMethod<TDeclaringType, TArg1, TArg2>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2)),
                _ => new StaticActionMethod<TDeclaringType, TArg1, TArg2>(methodInfo));
        }

        public static FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TReturnType> GetFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TReturnType>(MethodInfo methodInfo)
        {
            return (FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3)),
                _ => new FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TReturnType>(methodInfo));
        }

        public static ActionMethod<TDeclaringType, TArg1, TArg2, TArg3> GetActionMethod<TDeclaringType, TArg1, TArg2, TArg3>(MethodInfo methodInfo)
        {
            return (ActionMethod<TDeclaringType, TArg1, TArg2, TArg3>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3)),
                _ => new ActionMethod<TDeclaringType, TArg1, TArg2, TArg3>(methodInfo));
        }

        public static StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TReturnType> GetStaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TReturnType>(MethodInfo methodInfo)
        {
            return (StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3)),
                _ => new StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TReturnType>(methodInfo));
        }

        public static StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3> GetStaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3>(MethodInfo methodInfo)
        {
            return (StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3)),
                _ => new StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3>(methodInfo));
        }

        public static FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TReturnType> GetFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TReturnType>(MethodInfo methodInfo)
        {
            return (FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4)),
                _ => new FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TReturnType>(methodInfo));
        }

        public static ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4> GetActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4>(MethodInfo methodInfo)
        {
            return (ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4)),
                _ => new ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4>(methodInfo));
        }

        public static StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TReturnType> GetStaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TReturnType>(MethodInfo methodInfo)
        {
            return (StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4)),
                _ => new StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TReturnType>(methodInfo));
        }

        public static StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4> GetStaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4>(MethodInfo methodInfo)
        {
            return (StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4)),
                _ => new StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4>(methodInfo));
        }

        public static FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TReturnType> GetFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TReturnType>(MethodInfo methodInfo)
        {
            return (FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5)),
                _ => new FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TReturnType>(methodInfo));
        }

        public static ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5> GetActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5>(MethodInfo methodInfo)
        {
            return (ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5)),
                _ => new ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5>(methodInfo));
        }

        public static StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TReturnType> GetStaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TReturnType>(MethodInfo methodInfo)
        {
            return (StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5)),
                _ => new StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TReturnType>(methodInfo));
        }

        public static StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5> GetStaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5>(MethodInfo methodInfo)
        {
            return (StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5)),
                _ => new StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5>(methodInfo));
        }

        public static FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TReturnType> GetFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TReturnType>(MethodInfo methodInfo)
        {
            return (FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6)),
                _ => new FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TReturnType>(methodInfo));
        }

        public static ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6> GetActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6>(MethodInfo methodInfo)
        {
            return (ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6)),
                _ => new ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6>(methodInfo));
        }

        public static StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TReturnType> GetStaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TReturnType>(MethodInfo methodInfo)
        {
            return (StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6)),
                _ => new StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TReturnType>(methodInfo));
        }

        public static StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6> GetStaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6>(MethodInfo methodInfo)
        {
            return (StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6)),
                _ => new StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6>(methodInfo));
        }

        public static FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TReturnType> GetFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TReturnType>(MethodInfo methodInfo)
        {
            return (FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7)),
                _ => new FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TReturnType>(methodInfo));
        }

        public static ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7> GetActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7>(MethodInfo methodInfo)
        {
            return (ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7)),
                _ => new ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7>(methodInfo));
        }

        public static StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TReturnType> GetStaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TReturnType>(MethodInfo methodInfo)
        {
            return (StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7)),
                _ => new StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TReturnType>(methodInfo));
        }

        public static StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7> GetStaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7>(MethodInfo methodInfo)
        {
            return (StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7)),
                _ => new StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7>(methodInfo));
        }

        public static FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TReturnType> GetFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TReturnType>(MethodInfo methodInfo)
        {
            return (FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8)),
                _ => new FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TReturnType>(methodInfo));
        }

        public static ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8> GetActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8>(MethodInfo methodInfo)
        {
            return (ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8)),
                _ => new ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8>(methodInfo));
        }

        public static StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TReturnType> GetStaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TReturnType>(MethodInfo methodInfo)
        {
            return (StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8)),
                _ => new StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TReturnType>(methodInfo));
        }

        public static StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8> GetStaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8>(MethodInfo methodInfo)
        {
            return (StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8)),
                _ => new StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8>(methodInfo));
        }

        public static FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TReturnType> GetFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TReturnType>(MethodInfo methodInfo)
        {
            return (FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9)),
                _ => new FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TReturnType>(methodInfo));
        }

        public static ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9> GetActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9>(MethodInfo methodInfo)
        {
            return (ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9)),
                _ => new ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9>(methodInfo));
        }

        public static StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TReturnType> GetStaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TReturnType>(MethodInfo methodInfo)
        {
            return (StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9)),
                _ => new StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TReturnType>(methodInfo));
        }

        public static StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9> GetStaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9>(MethodInfo methodInfo)
        {
            return (StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9)),
                _ => new StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9>(methodInfo));
        }

        public static FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TReturnType> GetFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TReturnType>(MethodInfo methodInfo)
        {
            return (FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10)),
                _ => new FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TReturnType>(methodInfo));
        }

        public static ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10> GetActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10>(MethodInfo methodInfo)
        {
            return (ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10)),
                _ => new ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10>(methodInfo));
        }

        public static StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TReturnType> GetStaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TReturnType>(MethodInfo methodInfo)
        {
            return (StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10)),
                _ => new StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TReturnType>(methodInfo));
        }

        public static StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10> GetStaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10>(MethodInfo methodInfo)
        {
            return (StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10)),
                _ => new StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10>(methodInfo));
        }

        public static FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TReturnType> GetFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TReturnType>(MethodInfo methodInfo)
        {
            return (FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11)),
                _ => new FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TReturnType>(methodInfo));
        }

        public static ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11> GetActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11>(MethodInfo methodInfo)
        {
            return (ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11)),
                _ => new ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11>(methodInfo));
        }

        public static StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TReturnType> GetStaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TReturnType>(MethodInfo methodInfo)
        {
            return (StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11)),
                _ => new StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TReturnType>(methodInfo));
        }

        public static StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11> GetStaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11>(MethodInfo methodInfo)
        {
            return (StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11)),
                _ => new StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11>(methodInfo));
        }

        public static FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TReturnType> GetFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TReturnType>(MethodInfo methodInfo)
        {
            return (FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12)),
                _ => new FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TReturnType>(methodInfo));
        }

        public static ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12> GetActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12>(MethodInfo methodInfo)
        {
            return (ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12)),
                _ => new ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12>(methodInfo));
        }

        public static StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TReturnType> GetStaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TReturnType>(MethodInfo methodInfo)
        {
            return (StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12)),
                _ => new StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TReturnType>(methodInfo));
        }

        public static StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12> GetStaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12>(MethodInfo methodInfo)
        {
            return (StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12)),
                _ => new StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12>(methodInfo));
        }

        public static FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TReturnType> GetFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TReturnType>(MethodInfo methodInfo)
        {
            return (FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12), typeof(TArg13)),
                _ => new FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TReturnType>(methodInfo));
        }

        public static ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13> GetActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13>(MethodInfo methodInfo)
        {
            return (ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12), typeof(TArg13)),
                _ => new ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13>(methodInfo));
        }

        public static StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TReturnType> GetStaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TReturnType>(MethodInfo methodInfo)
        {
            return (StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12), typeof(TArg13)),
                _ => new StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TReturnType>(methodInfo));
        }

        public static StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13> GetStaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13>(MethodInfo methodInfo)
        {
            return (StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12), typeof(TArg13)),
                _ => new StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13>(methodInfo));
        }

        public static FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TReturnType> GetFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TReturnType>(MethodInfo methodInfo)
        {
            return (FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12), typeof(TArg13), typeof(TArg14)),
                _ => new FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TReturnType>(methodInfo));
        }

        public static ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14> GetActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14>(MethodInfo methodInfo)
        {
            return (ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12), typeof(TArg13), typeof(TArg14)),
                _ => new ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14>(methodInfo));
        }

        public static StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TReturnType> GetStaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TReturnType>(MethodInfo methodInfo)
        {
            return (StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12), typeof(TArg13), typeof(TArg14)),
                _ => new StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TReturnType>(methodInfo));
        }

        public static StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14> GetStaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14>(MethodInfo methodInfo)
        {
            return (StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12), typeof(TArg13), typeof(TArg14)),
                _ => new StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14>(methodInfo));
        }

        public static FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TReturnType> GetFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TReturnType>(MethodInfo methodInfo)
        {
            return (FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12), typeof(TArg13), typeof(TArg14), typeof(TArg15)),
                _ => new FuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TReturnType>(methodInfo));
        }

        public static ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15> GetActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15>(MethodInfo methodInfo)
        {
            return (ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12), typeof(TArg13), typeof(TArg14), typeof(TArg15)),
                _ => new ActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15>(methodInfo));
        }

        public static StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TReturnType> GetStaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TReturnType>(MethodInfo methodInfo)
        {
            return (StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TReturnType>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12), typeof(TArg13), typeof(TArg14), typeof(TArg15)),
                _ => new StaticFuncMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TReturnType>(methodInfo));
        }

        public static StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15> GetStaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15>(MethodInfo methodInfo)
        {
            return (StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15>)_methodsMap.GetOrAdd(
                methodInfo.GetCacheKey(typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12), typeof(TArg13), typeof(TArg14), typeof(TArg15)),
                _ => new StaticActionMethod<TDeclaringType, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15>(methodInfo));
        }

        private static Type GetConcreteMethodType(MethodInfo methodInfo, Type [] parameters)
        {
            switch (parameters.Length)
            {
                case 0:
                    return GetMethodType(
                            methodInfo,
                            typeof(FuncMethod<,>),
                            typeof(ActionMethod<>),
                            typeof(StaticFuncMethod<,>),
                            typeof(StaticActionMethod<>))
                        .MakeGenericType(GetGenericTypeParameters(methodInfo, parameters));
                case 1:
                    return GetMethodType(
                            methodInfo,
                            typeof(FuncMethod<,,>),
                            typeof(ActionMethod<,>),
                            typeof(StaticFuncMethod<,,>),
                            typeof(StaticActionMethod<,>))
                        .MakeGenericType(GetGenericTypeParameters(methodInfo, parameters));
                case 2:
                    return GetMethodType(
                            methodInfo,
                            typeof(FuncMethod<,,,>),
                            typeof(ActionMethod<,,>),
                            typeof(StaticFuncMethod<,,,>),
                            typeof(StaticActionMethod<,,>))
                        .MakeGenericType(GetGenericTypeParameters(methodInfo, parameters));
                case 3:
                    return GetMethodType(
                            methodInfo,
                            typeof(FuncMethod<,,,,>),
                            typeof(ActionMethod<,,,>),
                            typeof(StaticFuncMethod<,,,,>),
                            typeof(StaticActionMethod<,,,>))
                        .MakeGenericType(GetGenericTypeParameters(methodInfo, parameters));
                case 4:
                    return GetMethodType(
                            methodInfo,
                            typeof(FuncMethod<,,,,,>),
                            typeof(ActionMethod<,,,,>),
                            typeof(StaticFuncMethod<,,,,,>),
                            typeof(StaticActionMethod<,,,,>))
                        .MakeGenericType(GetGenericTypeParameters(methodInfo, parameters));
                case 5:
                    return GetMethodType(
                            methodInfo,
                            typeof(FuncMethod<,,,,,,>),
                            typeof(ActionMethod<,,,,,>),
                            typeof(StaticFuncMethod<,,,,,,>),
                            typeof(StaticActionMethod<,,,,,>))
                        .MakeGenericType(GetGenericTypeParameters(methodInfo, parameters));
                case 6:
                    return GetMethodType(
                            methodInfo,
                            typeof(FuncMethod<,,,,,,,>),
                            typeof(ActionMethod<,,,,,,>),
                            typeof(StaticFuncMethod<,,,,,,,>),
                            typeof(StaticActionMethod<,,,,,,>))
                        .MakeGenericType(GetGenericTypeParameters(methodInfo, parameters));
                case 7:
                    return GetMethodType(
                            methodInfo,
                            typeof(FuncMethod<,,,,,,,,>),
                            typeof(ActionMethod<,,,,,,,>),
                            typeof(StaticFuncMethod<,,,,,,,,>),
                            typeof(StaticActionMethod<,,,,,,,>))
                        .MakeGenericType(GetGenericTypeParameters(methodInfo, parameters));
                case 8:
                    return GetMethodType(
                            methodInfo,
                            typeof(FuncMethod<,,,,,,,,,>),
                            typeof(ActionMethod<,,,,,,,,>),
                            typeof(StaticFuncMethod<,,,,,,,,,>),
                            typeof(StaticActionMethod<,,,,,,,,>))
                        .MakeGenericType(GetGenericTypeParameters(methodInfo, parameters));
                case 9:
                    return GetMethodType(
                            methodInfo,
                            typeof(FuncMethod<,,,,,,,,,,>),
                            typeof(ActionMethod<,,,,,,,,,>),
                            typeof(StaticFuncMethod<,,,,,,,,,,>),
                            typeof(StaticActionMethod<,,,,,,,,,>))
                        .MakeGenericType(GetGenericTypeParameters(methodInfo, parameters));
                case 10:
                    return GetMethodType(
                            methodInfo,
                            typeof(FuncMethod<,,,,,,,,,,,>),
                            typeof(ActionMethod<,,,,,,,,,,>),
                            typeof(StaticFuncMethod<,,,,,,,,,,,>),
                            typeof(StaticActionMethod<,,,,,,,,,,>))
                        .MakeGenericType(GetGenericTypeParameters(methodInfo, parameters));
                case 11:
                    return GetMethodType(
                            methodInfo,
                            typeof(FuncMethod<,,,,,,,,,,,,>),
                            typeof(ActionMethod<,,,,,,,,,,,>),
                            typeof(StaticFuncMethod<,,,,,,,,,,,,>),
                            typeof(StaticActionMethod<,,,,,,,,,,,>))
                        .MakeGenericType(GetGenericTypeParameters(methodInfo, parameters));
                case 12:
                    return GetMethodType(
                            methodInfo,
                            typeof(FuncMethod<,,,,,,,,,,,,,>),
                            typeof(ActionMethod<,,,,,,,,,,,,>),
                            typeof(StaticFuncMethod<,,,,,,,,,,,,,>),
                            typeof(StaticActionMethod<,,,,,,,,,,,,>))
                        .MakeGenericType(GetGenericTypeParameters(methodInfo, parameters));
                case 13:
                    return GetMethodType(
                            methodInfo,
                            typeof(FuncMethod<,,,,,,,,,,,,,,>),
                            typeof(ActionMethod<,,,,,,,,,,,,,>),
                            typeof(StaticFuncMethod<,,,,,,,,,,,,,,>),
                            typeof(StaticActionMethod<,,,,,,,,,,,,,>))
                        .MakeGenericType(GetGenericTypeParameters(methodInfo, parameters));
                case 14:
                    return GetMethodType(
                            methodInfo,
                            typeof(FuncMethod<,,,,,,,,,,,,,,,>),
                            typeof(ActionMethod<,,,,,,,,,,,,,,>),
                            typeof(StaticFuncMethod<,,,,,,,,,,,,,,,>),
                            typeof(StaticActionMethod<,,,,,,,,,,,,,,>))
                        .MakeGenericType(GetGenericTypeParameters(methodInfo, parameters));
                case 15:
                    return GetMethodType(
                            methodInfo,
                            typeof(FuncMethod<,,,,,,,,,,,,,,,,>),
                            typeof(ActionMethod<,,,,,,,,,,,,,,,>),
                            typeof(StaticFuncMethod<,,,,,,,,,,,,,,,,>),
                            typeof(StaticActionMethod<,,,,,,,,,,,,,,,>))
                        .MakeGenericType(GetGenericTypeParameters(methodInfo, parameters));
                default:
                    throw new InvalidOperationException();
            }
        }

        private static Type[] GetGenericTypeParameters(MethodInfo methodInfo, Type[] parameters)
        {
            var genericTypeParameters = new List<Type>();

            genericTypeParameters.Add(methodInfo.DeclaringType);
            genericTypeParameters.AddRange(parameters);

            if (methodInfo.ReturnType != typeof(void))
            {
                genericTypeParameters.Add(methodInfo.ReturnType);
            }

            return genericTypeParameters.ToArray();
        }

        private static Type GetMethodType(
            MethodInfo methodInfo,
            Type instanceFuncMethodOpenGenericType,
            Type instanceActionMethodOpenGenericType,
            Type staticFuncMethodOpenGenericType,
            Type staticActionMethodOpenGenericType)
        {
            // On a side note, this I would *really* like to replace this bit of code with proper pattern matching in C#.
            return
                methodInfo.IsStatic
                    ? methodInfo.ReturnType == typeof(void)
                        ? staticActionMethodOpenGenericType
                        : staticFuncMethodOpenGenericType
                    : methodInfo.ReturnType == typeof(void)
                        ? instanceActionMethodOpenGenericType
                        : instanceFuncMethodOpenGenericType;
        }

        #endregion

        public MethodInfo MethodInfo { get { return _methodInfo; } }
        public string Name { get { return _methodInfo.Name; } }

        public bool IsPublic { get { return _methodInfo.IsPublic; } }
        public virtual bool IsStatic { get { return false; } }

        object IMethod.Invoke(object instance, params object[] args) { return _invoke(instance, args); }
        Func<object, object[], object> IMethod.InvokeDelegate { get { return _invoke; } }
    }
}